/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { ToonShader } from '../../shaders/ToonShader'
import { Color, IUniform, Vector3 } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Foliage: THREE.Mesh
  }
  materials: {
    ['Stylized Foliage']: THREE.MeshBasicMaterial
  }
}


export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes } = useGLTF('/treetop-transformed.glb') as GLTFResult

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Foliage.geometry} position={[0,0,0]}>
        
        <shaderMaterial
          attach="material"
          {...ToonShader}
          uniforms={
            {
              lightDirection: { value: new Vector3(15, 15, 15) },
              colors: { 
                value: [
                  new Color('#d1654f').convertLinearToSRGB(),
                  new Color('#e8b0af').convertLinearToSRGB(),
                  new Color('#eed0bd').convertLinearToSRGB(),
                  new Color('#feffe1').convertLinearToSRGB(),
                ] 
              },
              thresholds: { value: [0.2, 0.925, 0.975] }
            }}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/treetop-transformed.glb')
