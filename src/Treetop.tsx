/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Foliage: THREE.Mesh
  }
  materials: {
    ['Stylized Foliage']: THREE.MeshBasicMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials } = useGLTF('/treetop-transformed.glb') as GLTFResult
  
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Foliage.geometry} position={[0,0,0]}>
        <meshNormalMaterial />
      </mesh>
    </group>
  )
}

useGLTF.preload('/treetop-transformed.glb')
